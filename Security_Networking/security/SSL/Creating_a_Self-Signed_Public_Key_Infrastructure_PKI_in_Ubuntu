Step-by-Step Guide to Creating a Self-Signed Public Key Infrastructure (PKI) in Ubuntu
Creating a self-signed Public Key Infrastructure (PKI) in Ubuntu involves several steps, including installing necessary packages, creating a Certificate Authority (CA), and generating certificates. Here is a comprehensive guide:

Step 1: Install Necessary Packages
First, ensure that your system is up to date and install OpenSSL and Easy-RSA, which are required for creating the PKI.

 
 
sudo apt update
sudo apt install openssl easy-rsa
Step 2: Set Up the Easy-RSA Environment
Create a directory to hold your PKI files and navigate to it.

 
 
mkdir ~/my_pki
cd ~/my_pki
Copy the Easy-RSA files to your PKI directory.

 
 
cp -r /usr/share/easy-rsa/* .
Step 3: Initialize the PKI Directory
Initialize the PKI directory using Easy-RSA.

 
 
./easyrsa init-pki
Step 4: Build the Certificate Authority (CA)
Build the CA by running the following command and follow the prompts to create the CA key and certificate.

 
 
./easyrsa build-ca
Step 5: Generate a Certificate Request and Private Key for the Server
Generate a private key and certificate signing request (CSR) for the server.

 
 
./easyrsa gen-req server nopass
Step 6: Sign the Server Certificate with the CA
Sign the server certificate with your CA. This step creates the server certificate.

 
 
./easyrsa sign-req server server
Step 7: Create Client Certificates
To create a client certificate, generate a private key and CSR for the client, then sign it with the CA.

Generate a Client Private Key and CSR
 
 
./easyrsa gen-req client1 nopass
Sign the Client Certificate with Your CA
 
 
./easyrsa sign-req client client1
Step 8: Create Diffie-Hellman Parameters
Generate Diffie-Hellman parameters, which are required for certain types of VPNs.

 
 
./easyrsa gen-dh
Step 9: Verify the Generated Files
At this point, you should have the following files in your ~/my_pki directory:

CA certificate: pki/ca.crt
Server private key: pki/private/server.key
Server certificate: pki/issued/server.crt
Client private key: pki/private/client1.key
Client certificate: pki/issued/client1.crt
Diffie-Hellman parameters: pki/dh.pem
Step 10: Configure Your Services to Use the Certificates
The final step involves configuring your server and client services (e.g., web server, VPN) to use the generated certificates and keys. This configuration varies depending on the specific service you are setting up.

For example, if you are setting up an Apache web server, you would configure it to use the server certificate and key in the Apache configuration file.

Additional Commands for Management
You can also revoke certificates and manage your PKI using Easy-RSA commands. Here are a couple of examples:

Revoke a Certificate
 
 
./easyrsa revoke client1
./easyrsa gen-crl
View Certificate Details
 
 
openssl x509 -in pki/issued/client1.crt -text -noout
