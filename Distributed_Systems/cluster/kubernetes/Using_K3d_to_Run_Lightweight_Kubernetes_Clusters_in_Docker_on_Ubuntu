Using K3d to Run Lightweight Kubernetes Clusters in Docker on Ubuntu
Step 1: Install k3d
Download the latest k3d binary:

 
 
curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh |  
Verify k3d installation:

 
 
k3d --version
Step 2: Create a Kubernetes Cluster with k3d
Create a simple cluster:

 
 
k3d cluster create mycluster
Verify the cluster creation:

 
 
k3d cluster list
Check the running Docker containers:

 
 
docker ps
Step 3: Interact with Your Kubernetes Cluster
Install kubectl (Kubernetes command-line tool):

 
 
sudo snap install kubectl --classic
Verify kubectl installation:

 
 
kubectl version --client
Export the kubeconfig file to interact with your k3d cluster:

 
 
export KUBECONFIG=$(k3d kubeconfig write mycluster)
Verify the cluster status:

 
 
kubectl cluster-info
Get the list of nodes:

 
 
kubectl get nodes
Step 4: Deploy Applications on Your Cluster
Create a sample deployment:

 
 
kubectl create deployment hello-world --image=gcr.io/google-samples/node-hello:1.0
Expose the deployment as a service:

 
 
kubectl expose deployment hello-world --type=LoadBalancer --port=8080
Get the list of services:

 
 
kubectl get services
Step 5: Clean Up
Delete the cluster:

 
 
k3d cluster delete mycluster
Remove k3d if needed:

 
 
sudo rm /usr/local/bin/k3d
Additional Tips
Scaling your deployment:

 
 
kubectl scale deployment hello-world --replicas=3
Describe resources:

 
 
kubectl describe deployment hello-world
Monitor your cluster:

 
 
kubectl get pods --watch
