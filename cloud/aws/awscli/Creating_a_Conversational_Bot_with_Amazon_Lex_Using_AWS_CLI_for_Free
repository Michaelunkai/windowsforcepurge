### **Complete Guide to Creating a Conversational Bot with Amazon Lex Using AWS CLI for Free**

---

In this tutorial, you'll learn how to create a conversational bot using Amazon Lex, deploying it entirely through the AWS CLI. This comprehensive guide will walk you through every step, from setting up your AWS environment to testing your bot, all while leveraging free-tier services.

### **Prerequisites**
1. **AWS CLI**: Ensure that you have the AWS CLI installed and configured on your system.
2. **IAM Role**: Make sure you have an IAM role with the necessary permissions to create and manage Amazon Lex bots and Lambda functions.

### **Step 1: Create a Lex Bot**

#### **1.1 Create an Intent**
You’ll start by defining an intent for your bot. An intent represents a specific action that the user wants to perform.

  
aws lex-models put-intent \
    --name "OrderPizzaIntent" \
    --sample-utterances file://sample-utterances.json \
    --fulfillment-code-hook '{"uri": "arn:aws:lambda:region:account-id:function:orderPizzaLambda", "messageVersion": "1.0"}' \
    --slots file://slots.json

- **`sample-utterances.json`**:
     json
    [
      "I want to order a pizza",
      "Order a pizza",
      "I'd like to order a pizza"
    ]

- **`slots.json`**:
     json
    [
      {
        "name": "PizzaSize",
        "slotType": "PizzaSize",
        "slotConstraint": "Required",
        "valueElicitationPrompt": {
          "messages": [
            {
              "contentType": "PlainText",
              "content": "What size pizza would you like?"
            }
          ],
          "maxAttempts": 2
        }
      },
      {
        "name": "PizzaCrust",
        "slotType": "PizzaCrust",
        "slotConstraint": "Required",
        "valueElicitationPrompt": {
          "messages": [
            {
              "contentType": "PlainText",
              "content": "What type of crust would you like?"
            }
          ],
          "maxAttempts": 2
        }
      }
    ]

#### **1.2 Create the Lex Bot**
Now, you’ll create the Lex bot and link it to the intent you just created.

  
aws lex-models put-bot \
    --name "PizzaOrderBot" \
    --locale "en-US" \
    --child-directed false \
    --intents '[{"intentName": "OrderPizzaIntent", "intentVersion": "$LATEST"}]'

#### **1.3 Create Slot Types**
Slot types represent the variables within the conversation. For example, in a pizza ordering bot, the size of the pizza and the type of crust are slot types.

- **Create Pizza Size Slot Type**:
    
  aws lex-models put-slot-type \
      --name "PizzaSize" \
      --enumeration-values '[{"value": "small"}, {"value": "medium"}, {"value": "large"}]'

- **Create Pizza Crust Slot Type**:
    
  aws lex-models put-slot-type \
      --name "PizzaCrust" \
      --enumeration-values '[{"value": "thin"}, {"value": "thick"}]'

### **Step 2: Create and Deploy the Lambda Function**

#### **2.1 Create a Lambda Function**
The Lambda function will handle the fulfillment of the bot’s intent.

- **Lambda Function Code (`lambda_function.py`)**:
    
  import json

  def lambda_handler(event, context):
      response = {
          "dialogAction": {
              "type": "Close",
              "fulfillmentState": "Fulfilled",
              "message": {
                  "contentType": "PlainText",
                  "content": "Your pizza order has been placed."
              }
          }
      }
      return response

#### **2.2 Deploy the Lambda Function**
After creating the Lambda function, deploy it using the AWS CLI.

1. **Zip the Lambda Function Code**:
     
   zip function.zip lambda_function.py

2. **Create the Lambda Function on AWS**:
     
   aws lambda create-function \
       --function-name orderPizzaLambda \
       --runtime  3.8 \
       --role arn:aws:iam::account-id:role/lambda-ex \
       --handler lambda_function.lambda_handler \
       --zip-file fileb://function.zip

### **Step 3: Test the Bot**

#### **3.1 Test the Lex Bot Using AWS CLI**
Finally, you can test the bot to see how it responds to user inputs.

  
aws lex-runtime post-text \
    --bot-name "PizzaOrderBot" \
    --bot-alias "$LATEST" \
    --user-id "testuser" \
    --input-text "I want to order a pizza"

This command sends a test request to your Lex bot and returns a response based on the bot’s configuration.

---

### **Conclusion**
This tutorial guided you through creating and deploying a conversational bot using Amazon Lex, entirely through the AWS CLI. You created a Lex bot with custom intents, slots, and a Lambda function for fulfillment. While this setup uses free-tier services, be mindful of AWS usage to avoid potential charges. Expand on this foundation to build more complex bots with additional functionality.
