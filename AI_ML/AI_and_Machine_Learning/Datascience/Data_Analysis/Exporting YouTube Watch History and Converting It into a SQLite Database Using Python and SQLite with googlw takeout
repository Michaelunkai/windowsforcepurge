### **Comprehensive Guide: Exporting YouTube Watch History and Converting It into a SQLite Database Using Python and SQLite**

This tutorial provides a detailed walkthrough on how to export your entire YouTube watch history and convert it into a SQLite database using Python and SQLite. You will learn how to request your watch history from Google Takeout, process the data using Python, and create a structured database for efficient querying.

---

### **Step 1: Export Your YouTube Watch History Using Google Takeout**

1. **Access Google Takeout:**
   - Navigate to [Google Takeout](https://takeout.google.com).
   - Under the "Create a new export" section, click "Deselect all."

2. **Select YouTube Watch History:**
   - Scroll down to "YouTube and YouTube Music."
   - Click on "All YouTube data included" and deselect everything except "Watch history."
   - Click "OK."

3. **Configure and Export Data:**
   - Click "Next step."
   - Set the file format to `.zip` and choose a delivery method (e.g., email link).
   - Click "Create export." Google will take some time to prepare your data.

4. **Download the Exported Data:**
   - Once the export is ready, download the `.zip` file via the email link or directly from Google Takeout.
   - Extract the `.zip` file to locate the `watch-history.json` file in the folder.

---

### **Step 2: Set Up Your System for Data Conversion**

1. **Install Python (if not already installed):**
   Run the following command to install Python:
   ```bash
   sudo apt install python3 python3-pip
   ```

2. **Install Required Python Libraries:**
   Use `pip` to install the libraries needed for this tutorial:
   ```bash
   pip install pandas
   ```

3. **Ensure SQLite3 is Installed:**
   SQLite3 is typically pre-installed on most systems. Check its installation with:
   ```bash
   sqlite3 --version
   ```
   If not installed, use:
   ```bash
   sudo apt install sqlite3
   ```

---

### **Step 3: Convert YouTube Watch History to SQLite Database**

1. **Create a Python Script for Conversion:**
   Open a new script file:
   ```bash
   nano youtube_watch_history_to_db.py
   ```

2. **Add the Following Code:**

   ```python
   import json
   import sqlite3
   import pandas as pd

   # Load watch history JSON file
   with open('watch-history.json', 'r') as file:
       data = json.load(file)

   # Parse relevant information into a DataFrame
   watch_history = []
   for item in data:
       if "title" in item and "time" in item:
           watch_history.append({
               "title": item.get("title", "Unknown"),
               "url": item.get("titleUrl", None),
               "time": item.get("time", "Unknown"),
           })

   df = pd.DataFrame(watch_history)

   # Create SQLite database
   conn = sqlite3.connect('youtube_watch_history.db')
   df.to_sql('watch_history', conn, if_exists='replace', index=False)

   print("Database created: youtube_watch_history.db")
   ```

3. **Run the Python Script:**
   Execute the script to generate the database:
   ```bash
   python3 youtube_watch_history_to_db.py
   ```

4. **Check for the Output:**
   The script will create a SQLite database file named `youtube_watch_history.db` in the same directory.

---

### **Step 4: Query the SQLite Database**

1. **Open the SQLite Database:**
   Launch SQLite to interact with your database:
   ```bash
   sqlite3 youtube_watch_history.db
   ```

2. **Execute Queries:**
   - To view all data:
     ```sql
     SELECT * FROM watch_history;
     ```
   - To search for videos with specific terms in their titles:
     ```sql
     SELECT * FROM watch_history WHERE title LIKE '%search_term%';
     ```
   - To filter by date range:
     ```sql
     SELECT * FROM watch_history WHERE time BETWEEN '2023-01-01' AND '2023-12-31';
     ```

---

### **Step 5: Optional - Use a GUI for Easier Database Management**

If you prefer a graphical interface for database exploration, install DB Browser for SQLite:
```bash
sudo apt install sqlitebrowser
```

Open `youtube_watch_history.db` in DB Browser for an easier view of the data.

---

### **Outcome**

You now have a fully structured SQLite database containing your YouTube watch history. This database allows you to perform complex queries, analyze your viewing patterns, or integrate the data into other applications.
