# Complete Step-by-Step Guide to Setting Up, Running, and Using Guild AI for Machine Learning Experiment Tracking in Ubuntu 20.04 or Later

### Tools covered in this guide: Guild AI, Python 3.x, Git, pip, Virtual Environment, TensorFlow

---

## Table of Contents

1. [Prerequisites](#prerequisites)
2. [Installing Guild AI](#installing-guild-ai)
3. [Setting Up a Guild AI Project](#setting-up-a-guild-ai-project)
4. [Configuring Guild AI](#configuring-guild-ai)
5. [Running Experiments with Guild AI](#running-experiments-with-guild-ai)
6. [Viewing and Comparing Results](#viewing-and-comparing-results)
7. [Using Guild UI (Optional)](#using-guild-ui-optional)
8. [Troubleshooting](#troubleshooting)
9. [Additional Resources](#additional-resources)

---

## Prerequisites

Ensure your Ubuntu system has the following installed:

1. **Operating System**: Ubuntu 20.04 or later.
2. **Python**: Python 3.6 or later.
3. **pip**: Python package installer.
4. **Git**: For version control.

### Install Prerequisites:

1. **Update package lists**:
   ```bash
   sudo apt update
   ```

2. **Install Python and pip**:
   ```bash
   sudo apt install python3 python3-pip
   ```

3. **Install Git**:
   ```bash
   sudo apt install git
   ```

4. **Verify Installations**:
   ```bash
   python3 --version
   pip3 --version
   git --version
   ```

---

## Installing Guild AI

Guild AI is installed via pip. You can optionally set up a virtual environment to isolate dependencies.

### Step-by-Step Installation:

1. **Create a Virtual Environment**:
   ```bash
   python3 -m venv guild-env
   ```

2. **Activate the Virtual Environment**:
   ```bash
   source guild-env/bin/activate
   ```

3. **Upgrade pip**:
   ```bash
   pip install --upgrade pip
   ```

4. **Install Guild AI**:
   ```bash
   pip install guildai
   ```

5. **Verify Installation**:
   ```bash
   guild version
   ```

---

## Setting Up a Guild AI Project

Now that Guild AI is installed, you can set up a new project or integrate it into an existing ML project.

### Creating a New Project:

1. **Create a Project Directory**:
   ```bash
   mkdir my-guild-project
   cd my-guild-project
   ```

2. **Initialize a Git Repository (Optional)**:
   ```bash
   git init
   ```

---

## Configuring Guild AI

Guild AI relies on a `guild.yml` file to define experiments and dependencies. This file tells Guild AI how to manage your ML experiments.

### Creating the `guild.yml` File:

1. **Create the `guild.yml` File**:
   ```bash
   nano guild.yml
   ```

2. **Add Sample Configuration to `guild.yml`**:
   ```yaml
   # guild.yml

   project: my-guild-project

   python:
     interpreter: python3
     packages:
       - tensorflow==2.8.0
       - numpy
       - pandas

   experiments:
     default:
       flags:
         --epochs: 10
         --learning_rate: 0.001
   ```

3. **Save and Exit**:
   - Press `CTRL + O` to save, then `CTRL + X` to exit.

### Explanation:

- **project**: Defines the project name.
- **python**: Specifies Python version and required dependencies.
- **experiments**: Sets default parameters for experiments like `epochs` and `learning_rate`.

---

## Running Experiments with Guild AI

Guild AI allows you to run machine learning experiments with ease and keep track of their parameters and outcomes.

### Running a Default Experiment:

1. **Run the Training Script with Guild AI**:
   ```bash
   guild run python train.py
   ```

2. **Output**:
   - Guild AI will log the experiment and output all training results and parameters.
   
---

## Viewing and Comparing Results

Guild AI offers commands to list, view, and compare the results of your experiments.

### List All Experiments:

1. **List Experiments**:
   ```bash
   guild runs
   ```

### View Experiment Details:

1. **Show Experiment Details**:
   ```bash
   guild show <run-id>
   ```

### Compare Experiments:

1. **Compare Two Runs**:
   ```bash
   guild summary --compare <run1-id> <run2-id>
   ```

---

## Using Guild UI (Optional)

Guild AI includes a web-based UI for visualizing and managing your experiments interactively.

### Install Guild UI:

1. **Install Guild UI**:
   ```bash
   pip install guildai-ui
   ```

2. **Run Guild UI**:
   ```bash
   guild ui
   ```

3. **Access the UI**:
   - Open a browser and go to `http://localhost:8080`.

---

## Troubleshooting

1. **Guild Command Not Found**:
   - Make sure your virtual environment is activated.

2. **Permission Errors**:
   - Use a virtual environment or the `--user` flag when installing with pip.

---

## Additional Resources

- **Guild AI Documentation**: [Guild AI Docs](https://guild.ai/docs)
- **Guild AI GitHub**: [Guild AI GitHub](https://github.com/guildai/guildai)

---

Now you can use Guild AI for managing your machine learning experiments!
