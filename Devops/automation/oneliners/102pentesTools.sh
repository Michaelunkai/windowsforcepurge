#!/bin/ 

# Update package list and install all tools with no recommended packages, answering 'yes' to all prompts automatically
export DEBIAN_FRONTEND=noninteractive
sudo apt update && sudo apt install -y -qq \
    nmap netcat hping3 wireshark tcpdump aircrack-ng john hydra nikto sqlmap openvas \
    hashcat dsniff dnsenum gobuster wfuzz medusa thc-ipv6 ngrep whois arping macchanger \
    sslscan curl dirb recon-ng ophcrack smbclient samdump2 rkhunter openvpn ipv6toolkit \
    lynis ssldump scapy snort sniffglue yersinia siege bruteforce-luks ncrack fierce \
    python3 python3-pip ruby-dev libcurl4-openssl-dev make build-essential default-jre \
    git python3-venv python3-dev python3-setuptools python3-cryptography python3-impacket \
    python3-wheel python3-apt python3-cffi python3-tk python3-lxml libpq-dev libssl-dev \
    libffi-dev apache2 libapache2-mod-wsgi-py3 libjpeg-dev zlib1g-dev --no-install-recommends

# Clean up unnecessary packages
sudo apt autoremove -y -qq

# Install and update WPScan (without running it)
gem install wpscan && wpscan --update

# Create Kismet configuration folder and modify settings for remote capture (without starting it)
mkdir -p /root/.kismet
cp /etc/kismet/kismet_httpd.conf /root/.kismet/kismet_httpd.conf
sed -i 's/remote_capture_listen=.*$/remote_capture_listen=0.0.0.0/' /root/.kismet/kismet_httpd.conf
sed -i 's/remote_capture_port=.*$/remote_capture_port=3501/' /root/.kismet/kismet_httpd.conf
sudo systemctl stop kismet && sudo fuser -k 3501/tcp && sudo systemctl start kismet

# Set up and install additional network and security tools

# Install Yersinia (without starting it)
sudo apt install yersinia -y

# Install arp-scan (without running it)
sudo apt install -y arp-scan

# Install Arpspoof (without running it)
sudo apt install -y dsniff

# Install EtherApe (without starting it)
sudo apt install -y etherape

# Install Ettercap (without starting it)
sudo apt install ettercap-common -y

# Install Bettercap (without running it)
sudo apt install -y bettercap

# Install Netdiscover (without running it)
sudo apt install -y netdiscover

# Install Mausezahn (without running it)
sudo apt install -y mz

# Install netsniff-ng (without running it)
sudo apt install -y netsniff-ng

# Install Ntopng (without starting it)
sudo apt install -y ntopng

# Install Metasploit (without running it)
cd && sudo snap install metasploit-framework

# Download and configure linPEAS (without running it)
wget https://github.com/peass-ng/PEASS-ng/releases/latest/download/linpeas.sh
chmod +x linpeas.sh

# Download and configure LinEnum (without running it)
wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh
chmod +x LinEnum.sh

# Download and configure Linux Exploit Suggester (without running it)
wget https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh
chmod +x linux-exploit-suggester.sh

# Download and configure BeRoot (without running it)
git clone https://github.com/AlessandroZ/BeRoot.git
cd BeRoot/Linux
chmod +x beroot.py

# Install and enable Suricata (without starting it)
sudo apt-get install -y suricata && sudo systemctl enable suricata

# Install OWASP ZAP via snap (without running it)
sudo snap install zaproxy --classic

# Install and configure SQLMap (without running it)
pip install  map

# Install and configure CrackMapExec (without running it)
sudo apt install -y libssl-dev libffi-dev python3-dev build-essential && git clone --recursive https://github.com/byt3bl33d3r/CrackMapExec && cd CrackMapExec && pip install . || pip install crackmapexec

# Install fping (without running it)
sudo apt install -y fping

# Install MRTG (without running it)
sudo apt install -y mrtg

# Install Zeek (without starting it)
sudo apt install cmake make gcc g++ flex bison libpcap-dev libssl-dev python3-dev swig zlib1g-dev software-properties-common wget -y && wget https://download.zeek.org/zeek-4.2.2.tar.gz && tar -xzf zeek-4.2.2.tar.gz && cd zeek-4.2.2 && ./configure && make && sudo make install

# Install tcpick (without running it)
sudo apt install -y tcpick

# Install theHarvester (without running it)
sudo apt install -y git python3-pip && git clone https://github.com/laramies/theHarvester.git && cd theHarvester && sudo pip3 install -r requirements.txt

# Install Hydra (without running it)
sudo apt install -y hydra

# Install Nikto (without running it)
sudo apt install -y nikto

# Install tcptrack (without running it)
sudo apt install -y tcptrack

# Install WiFi Pumpkin (without running it)
sudo apt install -y wifi-pumpkin

# Install Sublist3r (without running it)
git clone https://github.com/aboul3la/Sublist3r.git
cd Sublist3r
pip3 install -r requirements.txt

# Install Maltego (without running it)
cd && sudo apt install -y default-jre && wget https://maltego-downloads.s3.us-east-2.amazonaws.com/linux/Maltego.v4.3.1.deb && sudo dpkg -i Maltego.v4.3.1.deb && sudo apt-get install -f

# Install and configure Social Engineer Toolkit (SET) (without running it)
sudo apt install -y git && git clone https://github.com/trustedsec/social-engineer-toolkit.git /opt/setoolkit && cd /opt/setoolkit && sudo python3 setup.py install

# Install BeEF (without starting it)
sudo apt install -y ruby ruby-dev git
git clone https://github.com/beefproject/beef
cd beef

# Update default username and password in BeEF config
sed -i 's/user: "beef"/user: "test"/' config.yaml
sed -i 's/passwd: "beef"/passwd: "test"/' config.yaml

# Install BeEF dependencies and bundler (without starting it)
yes | sudo ./install
sudo gem install bundler
bundle install

# Install Feroxbuster (without running it)
getrust && sudo apt install -y cargo && cargo install feroxbuster

# Install and configure snapd, enable AppArmor, and install Amass (without running it)
sudo apt install snapd -y && sudo apt update && sudo systemctl enable --now snapd.apparmor && sudo systemctl start snapd && sudo snap install amass

# Install and configure Responder (without running it)
git clone https://github.com/lgandx/Responder.git
cd Responder
sed -i 's/Interface = .*/Interface = eth0/' Responder.conf
sed -i 's/LLMNR = .*/LLMNR = On/; s/NBT-NS = .*/NBT-NS = On/; s/MDNS = .*/MDNS = On/' Responder.conf
sudo pip3 install -r requirements.txt

# Install Legion (without running it)
sudo git clone https://github.com/carlospolop/legion.git /opt/legion && cd /opt/legion && pip3 install -r requirements.txt && mv legion.py app.py

# Install XSSer (without running it)
cd && git clone https://github.com/epsylon/xsser.git && cd xsser && sudo apt-get install python3-pycurl && pip install bs4 && sudo python3 setup.py install

# Install Knock (without running it)
sudo git clone https://github.com/guelfoweb/knock.git /opt/knock && cd /opt/knock && sudo python3 setup.py install
