Step 1: Understanding UFW

UFW, or Uncomplicated Firewall, is a user-friendly frontend for managing netfilter firewall rules in Linux. It provides an easy-to-use interface for configuring firewall rules to control incoming and outgoing traffic on your system.

Step 2: Installing UFW

In your WSL2 terminal, run the following command to install UFW:

 
 
sudo apt update
sudo apt install ufw
This command updates the package lists for upgrades and installs UFW on your WSL2 instance.

Step 3: Enabling UFW

After installing UFW, you need to enable it. Run the following command:

 
 
sudo ufw enable
Enabling UFW activates the firewall and ensures that it starts automatically at boot.

Step 4: Checking UFW Status

To verify that UFW is running correctly, use the following command:

 
 
sudo ufw status verbose
This command displays detailed information about the status of UFW, including active rules and listening ports.


Step 5: Configuring Default Policies

By default, UFW denies all incoming and outgoing traffic. You can set default policies to control how UFW handles traffic that doesn't match any specific rules.

To set the default incoming policy to deny, run:

 
 
sudo ufw default deny incoming
And to set the default outgoing policy to allow, run:

 
 
sudo ufw default allow outgoing
These commands ensure that incoming connections are blocked by default, while outgoing connections are allowed.

Step 6: Allowing Specific Traffic

Now, let's create rules to allow specific types of traffic. For example, to allow SSH connections, run:

 
 
sudo ufw allow ssh
This command allows incoming SSH connections on the default SSH port (22). You can replace "ssh" with the specific port number if SSH is running on a different port.

Step 7: Enabling Other Services

Similarly, you can allow other services such as HTTP and HTTPS:

 
 
sudo ufw allow http
sudo ufw allow https
These commands allow incoming connections on port 80 (HTTP) and port 443 (HTTPS), respectively.

Step 8: Denying Traffic

If you want to deny specific traffic, you can use the deny command. For example, to deny incoming connections on port 8080:

 
 
sudo ufw deny 8080
This command denies incoming connections on port 8080.

Step 9: Deleting Rules

If you need to remove a rule, you can do so by specifying the rule and its direction. For example, to delete an SSH rule:

 
 
sudo ufw delete allow ssh
This command removes the rule that allows SSH connections.

Step 10: Logging

You can enable logging to track UFW activity. To enable logging, run:

 
 
sudo ufw logging on
This command enables logging for UFW, which can be helpful for monitoring firewall activity.

Step 11: Limiting Connections

To limit the number of connections allowed from a specific IP address, you can use the limit option. For example, to limit SSH connections from an IP address to 3 per minute:

 
 
sudo ufw limit ssh
This command limits SSH connections to 3 per minute from any IP address.

Step 12: Disabling UFW

If you need to temporarily disable UFW, you can do so with the following command:

 
 
sudo ufw disable
This command stops UFW and removes any active rules. Remember to re-enable it when necessary.

Step 13: Resetting UFW

To reset UFW to its default settings, including removing all rules and disabling the firewall, run:

 
 
sudo ufw reset
This command clears all rules and restores UFW to its initial state.

Step 14: Viewing Application Profiles

UFW comes with application profiles that provide predefined rules for common services. To list available application profiles, run:

 
 
sudo ufw app list
This command displays a list of available application profiles that you can use to configure UFW rules.

Step 15: Adding Custom Rules

You can create custom rules based on your specific requirements. For example, to allow incoming traffic on port 1234:

 
 
sudo ufw allow 1234/tcp
This command allows incoming TCP traffic on port 1234.

Step 16: Editing UFW Configuration

The UFW configuration file is located at /etc/default/ufw. You can edit this file to change UFW settings such as logging options and default policies.

Step 17: Enabling UFW at Boot

To ensure that UFW starts automatically at boot, run:

 
 
sudo systemctl enable ufw
This command enables the UFW service to start at boot time.

Step 18: Disabling IPv6

If you don't require IPv6 support and want to disable it in UFW, edit the UFW configuration file and set IPV6 to no. Then restart UFW:

 
 
sudo systemctl restart ufw
This disables IPv6 support in UFW.



Step 19: Checking UFW Status Again

After making changes and configuring UFW, it's important to check its status to ensure everything is set up correctly. Run the following command to view the current status:

 
 
sudo ufw status verbose
This command provides a detailed overview of UFW's status, including enabled/disabled status, default policies, and active rules.

Step 20: Testing Firewall Rules

Before considering your firewall configuration complete, it's crucial to test it to ensure it behaves as expected. Try accessing services from external sources (if applicable) to verify that allowed traffic passes through while denied traffic is blocked.

Step 21: Reviewing Logs

If logging is enabled, review UFW logs to monitor firewall activity and detect any unauthorized access attempts or unexpected behavior. Logs are typically stored in /var/log/ufw.log.

Step 22: Maintaining UFW

Regularly review and update your firewall rules to adapt to changing network requirements and security threats. Periodically revisit your configuration to ensure it remains effective and aligned with your security policies.

