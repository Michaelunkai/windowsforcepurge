### Comprehensive Guide to Copy Your GitHub Repository to GitLab on Ubuntu

Follow these steps to seamlessly transfer your GitHub repository to GitLab on an Ubuntu system.

#### Step 1: Clone Your GitHub Repository Locally

First, clone your GitHub repository to your local machine. Open your terminal and execute the following commands:

  
git clone https://github.com/yourusername/your-repo.git
cd your-repo

Replace `yourusername` and `your-repo` with your actual GitHub username and repository name.

#### Step 2: Create a New Repository on GitLab

1. **Log into GitLab**:
   - Open your web browser and navigate to [GitLab](https://gitlab.com/).
   - Log into your GitLab account.

2. **Create a New Project**:
   - Click on the "New Project" button.
   - Choose "Create blank project".
   - Fill in the project name and other details.
   - Click on "Create project".

Ensure you do not initialize the project with a README, .gitignore, or any other files.

#### Step 3: Add the New GitLab Repository as a Remote

Now, add the new GitLab repository as a remote in your local repository. Run the following commands in your terminal:

  
cd your-repo
git remote add gitlab https://gitlab.com/yourusername/your-repo.git

Replace `yourusername` and `your-repo` with your actual GitLab username and repository name.

#### Step 4: Push Your Code to the New GitLab Repository

Push your local repository's content to the new GitLab repository:

  
git push gitlab master

If you have other branches or tags, push them as well:

  
git push gitlab --all
git push gitlab --tags

#### Step 5: Verify the Transfer

Visit your new GitLab repository to ensure that all files and commit history have been transferred correctly.

#### Handling Common Issues

- **Authentication Errors**: If you encounter authentication issues, ensure you have the correct permissions and are logged into GitLab.
- **Push Conflicts**: If there are any conflicts or issues with the push, resolve them as you would with any Git operation.

