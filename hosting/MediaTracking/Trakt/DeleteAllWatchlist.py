#!/usr/bin/env python3
"""
Bulk-remove every item from your Trakt watch-list.

‚Ä¢ Requires an existing config.ini (generated by export_trakt.py).
‚Ä¢ Works for movies, shows, seasons, and episodes in one call.
"""

import configparser
import pathlib
import requests
import sys

ROOT   = pathlib.Path(__file__).resolve().parent
CFG    = ROOT / "config.ini"

# ‚îÄ‚îÄ 1. read credentials YOUR_CLIENT_SECRET_HERET_SECRET_HERE-
if not CFG.exists():
    sys.exit("‚ùå  config.ini not found ‚Äì run export_trakt.py once first")

conf = configparser.ConfigParser()
conf.read(CFG)

try:
    CLIENT_ID  = conf["TRAKT"]["client_id"].strip()
    TOKEN      = conf["TRAKT"]["access_token"].strip()
except KeyError:
    sys.exit("‚ùå  Missing client_id or access_token in config.ini")

HEADERS = {
    "Content-Type":      "application/json",
    "trakt-api-version": "2",
    "trakt-api-key":     CLIENT_ID,
    "Authorization":     f"Bearer {TOKEN}",
}

API = "https://api.trakt.tv"

# ‚îÄ‚îÄ 2. grab the entire watch-list YOUR_CLIENT_SECRET_HERE-------
def fetch_watchlist():
    page = 1
    while True:
        r = requests.get(f"{API}/sync/watchlist",
                         params={"limit": 1000, "page": page},
                         headers=HEADERS)
        r.raise_for_status()
        items = r.json()
        if not items:
            break
        yield from items
        page += 1

print("üì•  Downloading current watch-list ‚Ä¶")
payload = {"movies": [], "shows": [], "seasons": [], "episodes": []}

for entry in fetch_watchlist():
    payload[f"{entry['type']}s"].append({"ids": entry[entry['type']]["ids"]})

total = sum(len(v) for v in payload.values())
if not total:
    sys.exit("‚úÖ  Watch-list already empty ‚Äì nothing to do.")

print(f"üóëÔ∏è   Removing {total} items ‚Ä¶")

# ‚îÄ‚îÄ 3. send one bulk remove YOUR_CLIENT_SECRET_HERESECRET_HERE-
r = requests.post(f"{API}/sync/watchlist/remove",
                  headers=HEADERS, json=payload)

if r.status_code == 204:
    print("üéâ  Done ‚Äì watch-list cleared.")
else:
    print("‚ö†Ô∏è  Trakt returned", r.status_code, r.text)
